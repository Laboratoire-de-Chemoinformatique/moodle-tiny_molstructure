define("tiny_molstructure/ketcher",["exports","tiny_molstructure/selectors","core/config","core/str","tiny_molstructure/common","core/notification","core/ajax","editor_tiny/options"],(function(_exports,_selectors,_config,_str,_common,_notification,_ajax,_options){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.insertImage=_exports.createAnUploadImageFile=void 0,_selectors=_interopRequireDefault(_selectors),_config=_interopRequireDefault(_config),_notification=_interopRequireDefault(_notification),_ajax=_interopRequireDefault(_ajax);_exports.insertImage=async(iframeBody,editor)=>{let divContent="";const imgDataURL=iframeBody.contentDocument.querySelector(_selectors.default.elements.canvas.ketcherviewId).toDataURL("image/svg"),itemId=(0,_options.getDraftItemId)(editor);divContent='<img src="'+(await createAnUploadImageFile(itemId,imgDataURL)).fileUrl+'" alt="ChemDoodle PNG"/>',editor.insertContent(divContent)};const createAnUploadImageFile=async(itemId,imageDataUrl)=>await new Promise((resolve=>_ajax.default.call([{methodname:"tiny_molstructure_generate_store_image",args:{itemId:itemId,imageDataUrl:imageDataUrl},done:result=>{resolve(result)},fail:_notification.default.exception||failCallback("Error while generated image.")}])));_exports.createAnUploadImageFile=createAnUploadImageFile}));

//# sourceMappingURL=ketcher.min.js.map