{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Molstructure UI.\n *\n * @module      tiny_molstructure/ui\n * @copyright   2024 University of Strasbourg unistra.fr\n * @author Céline Pervès <louis.plyer@unistra.fr>\n * @author Louis Plyer <louis.plyer@unistra.fr>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport MolstructureModal from 'tiny_molstructure/modal';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Selectors from 'tiny_molstructure/selectors';\nimport * as Config from 'core/config';\nimport {insertImage} from \"./ketcher\";\nimport {initCanvas2D} from \"./canvas2D\";\nimport {initCanvas3D} from \"./canvas3D\";\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the equation editor\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nexport const displayDialogue = async(editor) => {\n    let data = {};\n    const modalPromises = await ModalFactory.create({\n        type: MolstructureModal.TYPE,\n        templateContext: getTemplateContext(editor, data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n\n\n    // Init canvas 2D.\n    let editorRoot = $root[0];\n    const iframeBody2D = editorRoot.querySelector(Selectors.elements.canvas.selector2D);\n    const iframeBody3D = editorRoot.querySelector(Selectors.elements.canvas.selector3D);\n    iframeBody2D.contentWindow.addEventListener('DOMContentLoaded', function(){\n        initCanvas2D(editor, iframeBody2D);\n        editorRoot.querySelector('.modal-body .nav-tabs .nav-item .nav-link').classList.add('active');\n        editorRoot.querySelector('.modal-body .nav-tabs .nav-item .nav-link').setAttribute('aria-selected','true');\n        editorRoot.querySelector('.modal-body .tab-content .tab-pane').classList.add('active');\n        editorRoot.querySelector('.modal-body .tab-content .tab-pane').classList.add('show');\n    });\n    iframeBody3D.contentWindow.addEventListener('DOMContentLoaded', function(){\n        initCanvas3D(editor, iframeBody3D);\n    });\n    // Due to firefox need to force tab selection\n\n    $root.on(ModalEvents.hidden, (e) => {\n        const submitAction = e.target.closest(Selectors.actions.submit);\n        if (submitAction) {\n            e.preventDefault();\n            // Select current iframe\n            const currentFrame = window.document.querySelector('div[id^=\"molstructure_divcontent_\"] div.tab-pane.active.show iframe')\n            insertImage(currentFrame, editor);\n        }\n        modalPromises.destroy();\n    });\n    $root.on(ModalEvents.save, (e) => {\n        e.preventDefault();\n        const currentFrame = window.document.querySelector('div[id^=\"molstructure_divcontent_\"] div.tab-pane.active.show iframe')\n        insertImage(currentFrame, editor);\n        modalPromises.destroy();\n    });\n};\n\n/**\n * Get template context.\n * @param {TinyMCE} editor\n * @param {Object} data\n * @returns {Object}\n */\nconst getTemplateContext = (editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        wwwroot: Config.wwwroot\n\n    }, data);\n};\n\n"],"names":["editor","displayDialogue","async","modalPromises","ModalFactory","create","type","MolstructureModal","TYPE","templateContext","getTemplateContext","large","show","$root","getRoot","editorRoot","iframeBody2D","querySelector","Selectors","elements","canvas","selector2D","iframeBody3D","selector3D","contentWindow","addEventListener","classList","add","setAttribute","on","ModalEvents","hidden","e","target","closest","actions","submit","preventDefault","currentFrame","window","document","destroy","save","data","Object","assign","elementid","id","wwwroot","Config"],"mappings":";;;;;;;;;m+BAsC6BA,SACzBC,gBAAgBD,eAQPC,gBAAkBC,MAAAA,eAErBC,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMC,eAAkBC,KACxBC,gBAAiBC,mBAAmBV,OAH7B,IAIPW,OAAO,IAGXR,cAAcS,aACRC,YAAcV,cAAcW,cAI9BC,WAAaF,MAAM,SACjBG,aAAeD,WAAWE,cAAcC,mBAAUC,SAASC,OAAOC,YAClEC,aAAeP,WAAWE,cAAcC,mBAAUC,SAASC,OAAOG,YACxEP,aAAaQ,cAAcC,iBAAiB,oBAAoB,sCAC/CzB,OAAQgB,cACrBD,WAAWE,cAAc,6CAA6CS,UAAUC,IAAI,UACpFZ,WAAWE,cAAc,6CAA6CW,aAAa,gBAAgB,QACnGb,WAAWE,cAAc,sCAAsCS,UAAUC,IAAI,UAC7EZ,WAAWE,cAAc,sCAAsCS,UAAUC,IAAI,WAEjFL,aAAaE,cAAcC,iBAAiB,oBAAoB,sCAC/CzB,OAAQsB,iBAIzBT,MAAMgB,GAAGC,sBAAYC,QAASC,OACLA,EAAEC,OAAOC,QAAQhB,mBAAUiB,QAAQC,QACtC,CACdJ,EAAEK,uBAEIC,aAAeC,OAAOC,SAASvB,cAAc,gGACvCqB,aAActC,QAE9BG,cAAcsC,aAElB5B,MAAMgB,GAAGC,sBAAYY,MAAOV,IACxBA,EAAEK,uBACIC,aAAeC,OAAOC,SAASvB,cAAc,gGACvCqB,aAActC,QAC1BG,cAAcsC,6DAUhB/B,mBAAqB,CAACV,OAAQ2C,OACzBC,OAAOC,OAAO,GAAI,CACrBC,UAAW9C,OAAO+C,GAClBC,QAASC,OAAOD,SAEjBL"}